/*

Cleaning Data in SQL Queries

*/

Select *
FROM PortfolioProject.dbo.NashvilleHousing

-----------------------------------------------------------------------------------------------------

--Standardize Date Format 

Select SaleDate, CONVERT(Date, Saledate)
FROM PortfolioProject.dbo.NashvilleHousing

Update NashvilleHousing
SET Saledate = CONVERT(Date, SaleDate)

-----------------------------------------------------------------------------------------------------

--Populate Property Address data 

Select *
FROM PortfolioProject.dbo.NashvilleHousing
--WHERE Propertyaddress is NULL
ORDER BY ParcelID

Select a.ParcelID, a.PropertyAddress, b.ParcelID, b.PropertyAddress, ISNULL(a.PropertyAddress, b.PropertyAddress)
FROM PortfolioProject.dbo.NashvilleHousing a 
JOIN PortfolioProject.dbo.NashvilleHousing b 
    on a.ParcelID = b.ParcelID
    AND a.[UniqueID] <> b.[UniqueID]
Where a.PropertyAddress is NULL

Update a 
SET propertyaddress = ISNULL (a.PropertyAddress, b.PropertyAddress)
FROM PortfolioProject.dbo.NashvilleHousing a 
JOIN PortfolioProject.dbo.NashvilleHousing b 
    on a.ParcelID = b.ParcelID
    AND a.[UniqueID] <> b.[UniqueID]
Where a.PropertyAddress is NULL


-----------------------------------------------------------------------------------------------------

--Breaking out Address into Individual Columns (Address, City, State)


Select Propertyaddress
FROM PortfolioProject.dbo.NashvilleHousing
--WHERE Propertyaddress is NULL
--ORDER BY ParcelID

SELECT 
SUBSTRING(Propertyaddress, 1, CHARINDEX(',', Propertyaddress) -1) as Address, 
SUBSTRING(Propertyaddress, CHARINDEX(',', Propertyaddress) +1 , LEN(Propertyaddress)) as Address  
FROM PortfolioProject.dbo.NashvilleHousing

ALTER TABLE NashvilleHousing
Add PropertySplitAddress Nvarchar(255);


Update NashvilleHousing 
SET PropertySplitAddress = SUBSTRING(Propertyaddress, 1, CHARINDEX(',', Propertyaddress) -1)


ALTER TABLE NashvilleHousing
Add PropertySplitCity Nvarchar(255);

Update NashvilleHousing 
SET PropertySplitCity = SUBSTRING(Propertyaddress, CHARINDEX(',', Propertyaddress) +1 , LEN(Propertyaddress))


SELECT *
FROM PortfolioProject.dbo.NashvilleHousing




SELECT OwnerAddress
FROM PortfolioProject.dbo.NashvilleHousing

SELECT
PARSENAME(REPLACE(OwnerAddress, ',', '.'), 3)
,PARSENAME(REPLACE(OwnerAddress, ',', '.'), 2)
,PARSENAME(REPLACE(OwnerAddress, ',', '.'), 1)
FROM PortfolioProject.dbo.NashvilleHousing


ALTER TABLE NashvilleHousing
Add OwnerSplitAddress Nvarchar(255);


Update NashvilleHousing 
SET OwnerSplitAddress = PARSENAME(REPLACE(OwnerAddress, ',', '.'), 3)


ALTER TABLE NashvilleHousing
Add OwnerSplitCity Nvarchar(255);

Update NashvilleHousing 
SET OwnerSplitCity = PARSENAME(REPLACE(OwnerAddress, ',', '.'), 2)

ALTER TABLE NashvilleHousing
Add OwnerSplitState Nvarchar(255);

Update NashvilleHousing 
SET OwnerSplitState = PARSENAME(REPLACE(OwnerAddress, ',', '.'), 1)


SELECT *
FROM PortfolioProject.dbo.NashvilleHousing


-----------------------------------------------------------------------------------------------------

-- Change Y and N to Yes and No in "Sold as Vacant" field 

Select Distinct(SoldAsVacant), Count(SoldAsVacant)
From PortfolioProject.dbo.NashvilleHousing
Group by SoldAsVacant
Order by 2 


Select SoldAsVacant
, CASE When SoldAsVacant = 'Y' Then 'Yes'
       When SoldAsVacant = 'N' Then 'No'
       Else SoldAsVacant 
       END
From PortfolioProject.dbo.NashvilleHousing


Update NashvilleHousing 
SET SoldAsVacant =  CASE When SoldAsVacant = 'Y' Then 'Yes'
       When SoldAsVacant = 'N' Then 'No'
       Else SoldAsVacant 
       END


-----------------------------------------------------------------------------------------------------
--Remove Duplicates 

WITH RowNumCTE AS(
SELECT *, 
    ROW_NUMBER() OVER (
        PARTITION BY ParcelID, 
                     PropertyAddress, 
                     SalePrice, 
                     SaleDate, 
                     LegalReference
                     ORDER BY 
                        UniqueID
                         ) row_num

From PortfolioProject.dbo.NashvilleHousing
--ORDER BY ParcelID
)
SELECT *
From RowNumCTE
WHERE row_num > 1
Order by PropertyAddress


-----------------------------------------------------------------------------------------------------
-- Delete Unused Columns 

SELECT *
FROM PortfolioProject.dbo.NashvilleHousing

ALTER TABLE PortfolioProject.dbo.NashvilleHousing
DROP COLUMN OwnerAddress, TaxDistrict, PropertyAddress, SaleDate 

ALTER TABLE PortfolioProject.dbo.NashvilleHousing
DROP COLUMN SaleDate 

-----------------------------------------------------------------------------------------------------

