/*
Covid 19 Data Exploration 

Skills used: Joins, CTE's, Temp Tables, Windows Functions, Aggregate Functions, Creating Views, Converting Data Types

*/

Select *
From PortfolioProject..CovidDeaths
Where continent is not null 
order by 3,4


--Select Data that we are going to be starting with  


SELECT Location, date, total_cases, total_deaths, new_cases, total_deaths, population
FROM PortfolioProject..CovidDeaths
Where continent is not null
ORDER BY 1,2

-- Total Cases vs Total Deaths 
-- Shows likelihood of dying if you contract Covid in your country 

SELECT Location, date, total_cases, total_deaths, (total_deaths/total_cases
)*100 as DeathPercentage
FROM PortfolioProject..CovidDeaths
WHERE location like '%states%' 
and continent is not null
ORDER BY 1,2


-- Total Cases vs Population 
-- Shows what percentage of population infected with Covid 

SELECT Location, date, total_cases, Population, (total_cases/Population
)*100 as PercentPopulationInfected
FROM PortfolioProject..CovidDeaths
--WHERE location like '%states%'
Where continent is not null  
ORDER BY 1,2

--Countries with Highest Infection Rate compared to Population

SELECT Location, Population, MAX(total_cases) as HighestInfectionCount, Max((total_cases/Population
))*100 as PercentPopulationInfected
FROM PortfolioProject..CovidDeaths
--WHERE location like '%states%'
Where continent is not null  
Group by Location, Population   -- need to group by for aggregate functions 
Order by PercentPopulationInfected desc 

--Countries with Highest Death Count per population 

SELECT Location, MAX(total_deaths) as TotalDeathCount
FROM PortfolioProject..CovidDeaths
--WHERE location like '%states%'
Where continent is not null  
Group by Location
Order by TotalDeathCount desc 

-- LET'S BREAK THINGS DOWN BY CONTINENT
-- Contintents with the highest death count per population 

SELECT continent, MAX(total_deaths) as TotalDeathCount
FROM PortfolioProject..CovidDeaths
--WHERE location like '%states%'
Where continent is not null  
Group by continent
Order by TotalDeathCount desc 


-- GlOBAL NUMBERS 

Select SUM(new_cases) as total_cases, SUM(cast(new_deaths as int)) as total_deaths, 
SUM(cast(new_deaths as int))/SUM(New_Cases)*100 as DeathPercentage
From PortfolioProject..CovidDeaths
--Where location like '%states%'
where continent is not null 
--Group By date
order by 1,2

-- Total Population vs Vaccinations
-- Shows Percentage of Population that has recieved at least one Covid Vaccine

SELECT dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations, 
SUM(CONVERT(int,vac.new_vaccinations)) OVER (Partition by dea.Location 
Order by dea.location, dea.Date) as RollingPeopleVaccinated
--, (RollingPeopleVaccinated/population)*100
FROM PortfolioProject..CovidDeaths dea 
JOIN PortfolioProject..CovidVaccinations vac 
    On dea.location = vac.location 
    and dea.date = vac.date 
WHERE dea.continent is not null   
ORDER BY 2,3

-- Using CTE to perform Calculation on Partition By in previous query 

With PopvsVac (Continent, Location, Date, Population, New_Vaccinations,  RollingPeopleVaccinated)
AS
(
SELECT dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations, 
SUM(CONVERT(int,vac.new_vaccinations)) OVER (Partition by dea.Location 
Order by dea.location, dea.Date) as RollingPeopleVaccinated
--, (RollingPeopleVaccinated/population)*100
FROM PortfolioProject..CovidDeaths dea 
JOIN PortfolioProject..CovidVaccinations vac 
    On dea.location = vac.location 
    and dea.date = vac.date 
WHERE dea.continent is not null   
--ORDER BY 2,3   
)
SELECT *, (RollingPeopleVaccinated/Population)*100
From PopvsVac

-- Using Temp Table to perform Calculation on Partition By in previous query 

DROP Table if exists #PercentPopulationVaccinated

Create Table #PercentPopulationVaccinated
(
    Continent nvarchar(255),
    Location NVARCHAR(255),
    Date datetime, 
    Population numeric, 
    New_vaccinations numeric, 
    RollingPeopleVaccinated numeric
)

Insert into #PercentPopulationVaccinated
SELECT dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations, 
SUM(CONVERT(int,vac.new_vaccinations)) OVER (Partition by dea.Location 
Order by dea.location, dea.Date) as RollingPeopleVaccinated
--, (RollingPeopleVaccinated/population)*100
FROM PortfolioProject..CovidDeaths dea 
JOIN PortfolioProject..CovidVaccinations vac 
    On dea.location = vac.location 
    and dea.date = vac.date 
--WHERE dea.continent is not null   
--ORDER BY 2,3   

SELECT *, (RollingPeopleVaccinated/Population)*100
From #PercentPopulationVaccinated


-- Creating View to store data for later visualizations 

Create View PercentPopulationVaccinated as 
SELECT dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations, 
SUM(CONVERT(int,vac.new_vaccinations)) OVER (Partition by dea.Location 
Order by dea.location, dea.Date) as RollingPeopleVaccinated
--, (RollingPeopleVaccinated/population)*100
FROM PortfolioProject..CovidDeaths dea 
JOIN PortfolioProject..CovidVaccinations vac 
    On dea.location = vac.location 
    and dea.date = vac.date 
WHERE dea.continent is not null   
--ORDER BY 2,3  


Select * 
From PercentPopulationVaccinated
